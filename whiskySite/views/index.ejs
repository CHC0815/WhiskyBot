<!DOCTYPE html>
<html>

<head>
    <link href="https://unpkg.com/material-components-web@latest/dist/material-components-web.min.css" rel="stylesheet">
    <script src="https://unpkg.com/material-components-web@latest/dist/material-components-web.min.js"></script>
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    <style>
        /* Style the button that is used to open and close the collapsible content */
        .collapsible {
            background-color: #eee;
            color: #444;
            cursor: pointer;
            padding: 18px;
            width: 100%;
            border: none;
            text-align: left;
            outline: none;
            font-size: 15px;
        }

        /* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */
        .active,
        .collapsible:hover {
            background-color: #ccc;
        }

        /* Style the collapsible content. Note: hidden by default */
        .content {
            padding: 0 18px;
            display: none;
            overflow: hidden;
            background-color: #f1f1f1;
        }

        ul.no-bullets {
            list-style-type: none;
            margin: 0;
            padding: 0;
        }
    </style>
    <title>WhiskySite for WhiskyBot</title>
</head>

<body>
    <ul class="no-bullets">
        <% params.forEach(function(item){ %>
            <%- include('whisky', {_params: item}); %>
        <% }); %>
    </ul>
    <script type="text/javascript">
        var coll = document.getElementsByClassName("collapsible");
        var i;

        for (i = 0; i < coll.length; i++) {
            coll[i].addEventListener("click", function () {
                this.classList.toggle("active");
                var content = this.nextElementSibling;
                if (content.style.display === "block") {
                    content.style.display = "none";
                } else {
                    content.style.display = "block";
                }
            });
        }
    </script>
    <script>
        function get(route, cb)
        {
            var xhttp;
            xhttp=new XMLHttpRequest();
            xhttp.onreadystatechange = function() {
                if (this.readyState == 4 && this.status == 200) {
                    cb(this);
                }else{
                    console.log("AJAX error:")
                    console.log(this.status);
                    console.log(this);
                }
            };
            xhttp.open("GET", route, true);
            xhttp.send();
        }

        function okbtn(bottleid, orderid)
        {
            get('order/ok/' + bottleid + '/' + orderid, (xhttp)=>{
                alert(xhttp.responseText);
            });
        }
        function errbtn(bottleid, orderid)
        {
            get('/order/delete/' + bottleid + '/' + orderid, (xhttp)=>{
                alert(xhttp.responseText);
            });
        }
    </script>
</body>

</html>